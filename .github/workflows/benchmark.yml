name: Benchmark

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  benchmark:
    name: Ruby ${{ matrix.ruby }} Benchmark
    
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        ruby: ['2.7', '3.0', '3.1', '3.2', '3.3', '3.4']
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Install cURL Headers
        run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev

      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Compile extensions
        run: bundle exec rake compile

      - name: Run sequential benchmarks
        run: |
          mkdir -p benchmark-results
          echo "# Benchmark Results - Ruby ${{ matrix.ruby }} - $(date)" > benchmark-results/benchmark-${{ matrix.ruby }}.md
          echo "\`\`\`" >> benchmark-results/benchmark-${{ matrix.ruby }}.md
          echo "Commit: ${{ github.sha }}" >> benchmark-results/benchmark-${{ matrix.ruby }}.md
          echo "Ruby version: $(ruby -v)" >> benchmark-results/benchmark-${{ matrix.ruby }}.md
          echo "" >> benchmark-results/benchmark-${{ matrix.ruby }}.md
          bundle exec ruby benchmark/http_clients_benchmark.rb | tee -a benchmark-results/benchmark-${{ matrix.ruby }}.md
          echo "\`\`\`" >> benchmark-results/benchmark-${{ matrix.ruby }}.md

      - name: Update benchmark history
        run: |
          # Create a CSV file for historical data if it doesn't exist
          if [ ! -f benchmark-results/benchmark-history-${{ matrix.ruby }}.csv ]; then
            echo "date,commit,ruby_version,curb_time,http_time,rquest_time,curb_req_per_sec,http_req_per_sec,rquest_req_per_sec" > benchmark-results/benchmark-history-${{ matrix.ruby }}.csv
          fi
          
          # Extract values from the benchmark output
          CURB_TIME=$(grep "Curb:" benchmark-results/benchmark-${{ matrix.ruby }}.md | grep "seconds" | sed -E 's/.*Curb: +([0-9.]+) seconds.*/\1/')
          HTTP_TIME=$(grep "HTTP.rb:" benchmark-results/benchmark-${{ matrix.ruby }}.md | grep "seconds" | sed -E 's/.*HTTP.rb: +([0-9.]+) seconds.*/\1/')
          RQUEST_TIME=$(grep "Rquest-rb:" benchmark-results/benchmark-${{ matrix.ruby }}.md | grep "seconds" | sed -E 's/.*Rquest-rb: +([0-9.]+) seconds.*/\1/')
          
          CURB_REQ_PER_SEC=$(grep "Curb:" benchmark-results/benchmark-${{ matrix.ruby }}.md | grep "req/s" | sed -E 's/.*\(([0-9.]+) req\/s\).*/\1/')
          HTTP_REQ_PER_SEC=$(grep "HTTP.rb:" benchmark-results/benchmark-${{ matrix.ruby }}.md | grep "req/s" | sed -E 's/.*\(([0-9.]+) req\/s\).*/\1/')
          RQUEST_REQ_PER_SEC=$(grep "Rquest-rb:" benchmark-results/benchmark-${{ matrix.ruby }}.md | grep "req/s" | sed -E 's/.*\(([0-9.]+) req\/s\).*/\1/')
          
          # Append data to CSV with Ruby version
          echo "$(date +%Y-%m-%d),${{ github.sha }},${{ matrix.ruby }},$CURB_TIME,$HTTP_TIME,$RQUEST_TIME,$CURB_REQ_PER_SEC,$HTTP_REQ_PER_SEC,$RQUEST_REQ_PER_SEC" >> benchmark-results/benchmark-history-${{ matrix.ruby }}.csv

      - name: Download previous benchmark history
        uses: actions/download-artifact@v4
        with:
          name: benchmark-history-${{ matrix.ruby }}
          path: previous-benchmark-history
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.before && format('{0}', github.event.before) || '' }}
        continue-on-error: true

      - name: Merge benchmark history
        run: |
          if [ -f previous-benchmark-history/benchmark-history-${{ matrix.ruby }}.csv ]; then
            # Skip header from current file
            tail -n +2 benchmark-results/benchmark-history-${{ matrix.ruby }}.csv > temp.csv
            # Combine previous with current (without duplicating headers)
            cat previous-benchmark-history/benchmark-history-${{ matrix.ruby }}.csv temp.csv > benchmark-results/benchmark-history-${{ matrix.ruby }}.csv
            rm temp.csv
          fi

      - name: Generate benchmark charts
        run: |
          ruby script/generate_benchmark_chart.rb benchmark-results/benchmark-history-${{ matrix.ruby }}.csv benchmark-results
          # Rename output files to include Ruby version
          mv benchmark-results/time_chart.png benchmark-results/time_chart-${{ matrix.ruby }}.png
          mv benchmark-results/rps_chart.png benchmark-results/rps_chart-${{ matrix.ruby }}.png
          mv benchmark-results/time_chart.svg benchmark-results/time_chart-${{ matrix.ruby }}.svg
          mv benchmark-results/rps_chart.svg benchmark-results/rps_chart-${{ matrix.ruby }}.svg

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.ruby }}-${{ github.sha }}
          path: benchmark-results/benchmark-${{ matrix.ruby }}.md
          retention-days: 90

      - name: Upload benchmark history
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-history-${{ matrix.ruby }}
          path: benchmark-results/benchmark-history-${{ matrix.ruby }}.csv
          retention-days: 90
          
      - name: Upload benchmark charts
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-charts-${{ matrix.ruby }}
          path: |
            benchmark-results/time_chart-${{ matrix.ruby }}.png
            benchmark-results/rps_chart-${{ matrix.ruby }}.png
            benchmark-results/time_chart-${{ matrix.ruby }}.svg
            benchmark-results/rps_chart-${{ matrix.ruby }}.svg
          retention-days: 90

  # Job to combine all benchmark results after individual Ruby version benchmarks complete
  combine-results:
    name: Combine Benchmark Results
    needs: benchmark
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true
          
      - name: Install dependencies
        run: bundle install
      
      - name: Download all benchmark artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-benchmarks
          pattern: benchmark-*
          merge-multiple: true